# Generated by Django 2.0.2 on 2018-02-25 12:27

import audit_log.models.fields
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Biometric',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pic', models.TextField(verbose_name='Passport Photo')),
                ('f1', models.TextField(verbose_name='Finder #1')),
                ('f2', models.TextField(verbose_name='Finder #2')),
                ('f3', models.TextField(verbose_name='Finder #3')),
                ('f4', models.TextField(verbose_name='Finder #4')),
                ('f5', models.TextField(verbose_name='Finder #5')),
                ('f6', models.TextField(verbose_name='Finder #6')),
                ('f7', models.TextField(verbose_name='Finder #7')),
                ('f8', models.TextField(verbose_name='Finder #8')),
                ('f9', models.TextField(verbose_name='Finder #9')),
                ('f10', models.TextField(verbose_name='Finder #10')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
        ),
        migrations.CreateModel(
            name='BiometricAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('pic', models.TextField(verbose_name='Passport Photo')),
                ('f1', models.TextField(verbose_name='Finder #1')),
                ('f2', models.TextField(verbose_name='Finder #2')),
                ('f3', models.TextField(verbose_name='Finder #3')),
                ('f4', models.TextField(verbose_name='Finder #4')),
                ('f5', models.TextField(verbose_name='Finder #5')),
                ('f6', models.TextField(verbose_name='Finder #6')),
                ('f7', models.TextField(verbose_name='Finder #7')),
                ('f8', models.TextField(verbose_name='Finder #8')),
                ('f9', models.TextField(verbose_name='Finder #9')),
                ('f10', models.TextField(verbose_name='Finder #10')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_biometric_audit_log_entry', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CompanyAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_no', models.CharField(max_length=75, verbose_name='House Number')),
                ('street', models.CharField(max_length=75, verbose_name='Street')),
                ('city', models.CharField(max_length=75, verbose_name='City')),
                ('ward', models.CharField(max_length=75, null=True, verbose_name='Ward')),
                ('lga', models.CharField(max_length=75, verbose_name='LGA')),
                ('state', models.CharField(max_length=75, verbose_name='State')),
                ('country', models.CharField(default='Nigeria', max_length=75, verbose_name='Country')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Company Address',
                'verbose_name_plural': 'Company Addresses',
            },
        ),
        migrations.CreateModel(
            name='CompanyAddressAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('house_no', models.CharField(max_length=75, verbose_name='House Number')),
                ('street', models.CharField(max_length=75, verbose_name='Street')),
                ('city', models.CharField(max_length=75, verbose_name='City')),
                ('ward', models.CharField(max_length=75, null=True, verbose_name='Ward')),
                ('lga', models.CharField(max_length=75, verbose_name='LGA')),
                ('state', models.CharField(max_length=75, verbose_name='State')),
                ('country', models.CharField(default='Nigeria', max_length=75, verbose_name='Country')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_companyaddress_audit_log_entry', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='CorporateTaxPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name='Registration Name')),
                ('trade_name', models.CharField(max_length=150, verbose_name='Trade Name')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('tin', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='JTB TIN')),
                ('company_size', models.CharField(choices=[('Small', 'Small'), ('Medium', 'Medium'), ('Large', 'Large')], max_length=20, verbose_name='Company Size')),
                ('ownership_type', models.CharField(choices=[('Private Limited Company', 'Private Limited Company'), ('Public Limited Company', 'Public Limited Company'), ('Trusteeship', 'Trusteeship'), ('Companies Limited By Guarantee', 'Companies Limited By Guarantee'), ('Federal MDAs', 'Federal MDAs'), ('State MDAs', 'State MDAs'), ('Foreign/Non-resident Companies', 'Foreign/Non-resident Companies'), ('Partnership', 'Partnership'), ('Private Unlimited Company', 'Private Unlimited Company'), ('Sole Proprietorship', 'Sole Proprietorship')], max_length=75, verbose_name='Organization Type')),
                ('reg_status', models.CharField(choices=[('Registered', 'Registered'), ('Unregistered', 'Unregistered')], max_length=20, verbose_name='Registration Status')),
                ('reg_date', models.DateField(blank=True, null=True, verbose_name='CAC Registration Date')),
                ('start_date', models.DateField(verbose_name='Business Start Date')),
                ('reg_no', models.CharField(blank=True, max_length=20, null=True, verbose_name='Registration Number')),
                ('line_of_business', models.CharField(max_length=75, verbose_name='Line of Business')),
                ('sector', models.CharField(max_length=75, verbose_name='Sector')),
                ('contact_name', models.CharField(max_length=150, verbose_name='Contact Name')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Corporate Tax Payer',
            },
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True, verbose_name='Country')),
                ('code', models.CharField(max_length=2, unique=True, verbose_name='Code')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name_plural': 'Countries',
            },
        ),
        migrations.CreateModel(
            name='IdentificationDocument',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=75, verbose_name='ID Type')),
                ('issuer', models.CharField(max_length=75, verbose_name='Issuer')),
                ('issuance_date', models.DateField(verbose_name='Issuance Date')),
                ('expiry_date', models.DateField(null=True, verbose_name='Expiry Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('tax_payer', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='identification_document', to='api.CorporateTaxPayer')),
            ],
            options={
                'verbose_name': 'Identification Document',
            },
        ),
        migrations.CreateModel(
            name='IdentificationDocumentAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('type', models.CharField(max_length=75, verbose_name='ID Type')),
                ('issuer', models.CharField(max_length=75, verbose_name='Issuer')),
                ('issuance_date', models.DateField(verbose_name='Issuance Date')),
                ('expiry_date', models.DateField(null=True, verbose_name='Expiry Date')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_identificationdocument_audit_log_entry', to=settings.AUTH_USER_MODEL)),
                ('tax_payer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_identification_document', to='api.CorporateTaxPayer')),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Lga',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, verbose_name='LGA')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Local Government Area',
            },
        ),
        migrations.CreateModel(
            name='ResidentialAddress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house_no', models.CharField(max_length=75, verbose_name='House Number')),
                ('street', models.CharField(max_length=75, verbose_name='Street')),
                ('city', models.CharField(max_length=75, verbose_name='City')),
                ('ward', models.CharField(max_length=75, null=True, verbose_name='Ward')),
                ('lga', models.CharField(max_length=75, verbose_name='LGA')),
                ('state', models.CharField(max_length=75, verbose_name='State')),
                ('country', models.CharField(default='Nigeria', max_length=75, verbose_name='Country')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Residential Address',
                'verbose_name_plural': 'Residential Addresses',
            },
        ),
        migrations.CreateModel(
            name='ResidentialAddressAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('house_no', models.CharField(max_length=75, verbose_name='House Number')),
                ('street', models.CharField(max_length=75, verbose_name='Street')),
                ('city', models.CharField(max_length=75, verbose_name='City')),
                ('ward', models.CharField(max_length=75, null=True, verbose_name='Ward')),
                ('lga', models.CharField(max_length=75, verbose_name='LGA')),
                ('state', models.CharField(max_length=75, verbose_name='State')),
                ('country', models.CharField(default='Nigeria', max_length=75, verbose_name='Country')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_residentialaddress_audit_log_entry', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.CreateModel(
            name='Serial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('next_serial', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=75, unique=True, verbose_name='State')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
        ),
        migrations.CreateModel(
            name='TaxPayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=75, verbose_name='Surname')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('other_name', models.CharField(max_length=75, null=True, verbose_name='Other Name')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=20, verbose_name='Marital Status')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('tin', models.CharField(blank=True, max_length=10, null=True, unique=True, verbose_name='JTB TIN')),
                ('lga_of_origin', models.CharField(max_length=75, verbose_name='LGA')),
                ('state_of_origin', models.CharField(max_length=75, verbose_name='State of Origin')),
                ('nationality', models.CharField(max_length=75, verbose_name='Nationality')),
                ('tax_payer_company', models.CharField(max_length=150, verbose_name='Company')),
                ('occupation', models.CharField(max_length=75, verbose_name='Occupation')),
                ('employment_status', models.CharField(choices=[('Unemployed', 'Unemployed'), ('Self Employed', 'Self Employed'), ('Employed', 'Employed')], max_length=20, verbose_name='Employment Status')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
            ],
            options={
                'verbose_name': 'Individual Tax Payer',
            },
        ),
        migrations.CreateModel(
            name='TaxPayerAuditLogEntry',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('surname', models.CharField(max_length=75, verbose_name='Surname')),
                ('first_name', models.CharField(max_length=75, verbose_name='First Name')),
                ('other_name', models.CharField(max_length=75, null=True, verbose_name='Other Name')),
                ('marital_status', models.CharField(choices=[('Single', 'Single'), ('Married', 'Married')], max_length=20, verbose_name='Marital Status')),
                ('gender', models.CharField(choices=[('Male', 'Male'), ('Female', 'Female')], max_length=20, verbose_name='Gender')),
                ('dob', models.DateField(verbose_name='Date of Birth')),
                ('tin', models.CharField(blank=True, db_index=True, max_length=10, null=True, verbose_name='JTB TIN')),
                ('lga_of_origin', models.CharField(max_length=75, verbose_name='LGA')),
                ('state_of_origin', models.CharField(max_length=75, verbose_name='State of Origin')),
                ('nationality', models.CharField(max_length=75, verbose_name='Nationality')),
                ('tax_payer_company', models.CharField(max_length=150, verbose_name='Company')),
                ('occupation', models.CharField(max_length=75, verbose_name='Occupation')),
                ('employment_status', models.CharField(choices=[('Unemployed', 'Unemployed'), ('Self Employed', 'Self Employed'), ('Employed', 'Employed')], max_length=20, verbose_name='Employment Status')),
                ('phone', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')], verbose_name='Phone')),
                ('email', models.EmailField(db_index=True, max_length=254, verbose_name='Email')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Last Modified')),
                ('action_id', models.AutoField(primary_key=True, serialize=False)),
                ('action_date', models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                ('action_type', models.CharField(choices=[('I', 'Created'), ('U', 'Changed'), ('D', 'Deleted')], editable=False, max_length=1)),
                ('action_user', audit_log.models.fields.LastUserField(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='_taxpayer_audit_log_entry', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('-action_date',),
                'default_permissions': (),
            },
        ),
        migrations.AddField(
            model_name='residentialaddressauditlogentry',
            name='tax_payer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_residential_address', to='api.TaxPayer'),
        ),
        migrations.AddField(
            model_name='residentialaddress',
            name='tax_payer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='residential_address', to='api.TaxPayer'),
        ),
        migrations.AddField(
            model_name='lga',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lgas', to='api.State'),
        ),
        migrations.AddField(
            model_name='companyaddressauditlogentry',
            name='tax_payer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_company_address', to='api.CorporateTaxPayer'),
        ),
        migrations.AddField(
            model_name='companyaddress',
            name='tax_payer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='company_address', to='api.CorporateTaxPayer'),
        ),
        migrations.AddField(
            model_name='biometricauditlogentry',
            name='tax_payer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='_auditlog_biometrics', to='api.TaxPayer'),
        ),
        migrations.AddField(
            model_name='biometric',
            name='tax_payer',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='biometrics', to='api.TaxPayer'),
        ),
        migrations.AlterUniqueTogether(
            name='lga',
            unique_together={('name', 'state')},
        ),
    ]
